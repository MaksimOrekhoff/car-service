{
	"info": {
		"_postman_id": "0535bd11-b172-4df3-bf5d-6077951e2994",
		"name": "Rikmasters test backend E2E",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21596615"
	},
	"item": [
		{
			"name": "post owner1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create Owner1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql('Owner1');\r",
							"    pm.expect(jsonData.passport).to.eql('first');\r",
							"    pm.expect(jsonData.driversLicense).to.eql('D');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Owner1\",\r\n    \"middleName\": \"One\",\r\n\"lastName\": \"Owner1\",\r\n    \"passport\": \"first\",\r\n    \"driversLicense\": \"D\",\r\n    \"dateOfBirth\": \"05.12.1980\",\r\n    \"experience\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/owners",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners"
					]
				}
			},
			"response": []
		},
		{
			"name": "add owner2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create Owner2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql('Owner2');\r",
							"    pm.expect(jsonData.passport).to.eql('second');\r",
							"    pm.expect(jsonData.driversLicense).to.eql('B');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Owner2\",\r\n    \"middleName\": \"TWO\",\r\n    \"lastName\": \"Owner2\",\r\n    \"passport\": \"second\",\r\n    \"driversLicense\": \"B\",\r\n    \"dateOfBirth\": \"03.07.1996\",\r\n    \"experience\": \"20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/owners",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners"
					]
				}
			},
			"response": []
		},
		{
			"name": "get owner1 by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get Owner1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql('Owner1');\r",
							"    pm.expect(jsonData.passport).to.eql('first');\r",
							"    pm.expect(jsonData.driversLicense).to.eql('D');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/owners/:ownerId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners",
						":ownerId"
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add car1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create car1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.vin).to.eql('first вин');\r",
							"    pm.expect(jsonData.governmentNumber).to.eql('R523CN');\r",
							"    pm.expect(jsonData.brand).to.eql('Opel');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"vin\": \"first вин\",\r\n    \"governmentNumber\": \"R523CN\",\r\n    \"manufacturer\": \"OpelConcern\",\r\n    \"brand\": \"Opel\",\r\n    \"yearOfIssue\": \"2017-04-11\",\r\n    \"details\": []\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "get car1 by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get car1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.vin).to.eql('first вин');\r",
							"    pm.expect(jsonData.governmentNumber).to.eql('R523CN');\r",
							"    pm.expect(jsonData.brand).to.eql('Opel');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars/:carId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						":carId"
					],
					"variable": [
						{
							"key": "carId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add car2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create car2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.vin).to.eql('second вин');\r",
							"    pm.expect(jsonData.governmentNumber).to.eql('D782LB');\r",
							"    pm.expect(jsonData.brand).to.eql('Mazda');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"vin\": \"second вин\",\r\n    \"governmentNumber\": \"D782LB\",\r\n    \"manufacturer\": \"MazdaConcern\",\r\n    \"brand\": \"Mazda\",\r\n    \"yearOfIssue\": \"2023-04-11\",\r\n    \"details\": []\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "add car3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create car3\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.vin).to.eql('threed вин');\r",
							"    pm.expect(jsonData.governmentNumber).to.eql('A963CK');\r",
							"    pm.expect(jsonData.brand).to.eql('Toyota');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"vin\": \"threed вин\",\r\n    \"governmentNumber\": \"A963CK\",\r\n    \"manufacturer\": \"ToyotaConcern\",\r\n    \"brand\": \"Toyota\",\r\n    \"yearOfIssue\": \"2020-04-11\",\r\n    \"details\": []\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "add detail1 in car1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create detail1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.serialNumber).to.eql('kasdfncxvx');\r",
							"    pm.expect(jsonData.denomination).to.eql('Лобовое');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"serialNumber\": \"kasdfncxvx\",\r\n    \"denomination\": \"Лобовое\",\r\n    \"car\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/details",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"details"
					]
				}
			},
			"response": []
		},
		{
			"name": "add detail2 in car1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create detail2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.serialNumber).to.eql('1vh9rh13v');\r",
							"    pm.expect(jsonData.denomination).to.eql('Вал');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"serialNumber\": \"1vh9rh13v\",\r\n    \"denomination\": \"Вал\",\r\n    \"car\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/details",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"details"
					]
				}
			},
			"response": []
		},
		{
			"name": "get detail1 by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get detail1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].serialNumber).to.eql('kasdfncxvx');\r",
							"    pm.expect(jsonData[0].denomination).to.eql('Лобовое');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/details/:detailId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"details",
						":detailId"
					],
					"variable": [
						{
							"key": "detailId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get car1 with detail1and2 by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get car1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.vin).to.eql('first вин');\r",
							"    pm.expect(jsonData.governmentNumber).to.eql('R523CN');\r",
							"    pm.expect(jsonData.brand).to.eql('Opel');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars/:carId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						":carId"
					],
					"variable": [
						{
							"key": "carId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "replacement detail1 on detail3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create detail3\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.serialNumber).to.eql('новое Лобовое');\r",
							"    pm.expect(jsonData.denomination).to.eql('Лобовое');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"serialNumber\": \"новое Лобовое\",\r\n    \"denomination\": \"Лобовое\",\r\n    \"car\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/details",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"details"
					]
				}
			},
			"response": []
		},
		{
			"name": "get car1 with detail1and3 by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get car1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.vin).to.eql('first вин');\r",
							"    pm.expect(jsonData.governmentNumber).to.eql('R523CN');\r",
							"    pm.expect(jsonData.brand).to.eql('Opel');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars/:carId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						":carId"
					],
					"variable": [
						{
							"key": "carId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "patch owner1 firstName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create Owner1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql('Owner4');\r",
							"    pm.expect(jsonData.passport).to.eql('first');\r",
							"    pm.expect(jsonData.driversLicense).to.eql('D');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Owner4\",\r\n    \"middleName\": \"One\",\r\n\"lastName\": \"Owner1\",\r\n    \"passport\": \"first\",\r\n    \"driversLicense\": \"D\",\r\n    \"dateOfBirth\": \"05.12.1980\",\r\n    \"experience\": \"10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/owners/:ownerId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners",
						":ownerId"
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "patch car1 governmentNumber",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create car1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.vin).to.eql('first вин');\r",
							"    pm.expect(jsonData.governmentNumber).to.eql('N325EW');\r",
							"    pm.expect(jsonData.brand).to.eql('Opel');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n    \"vin\": \"first вин\",\r\n    \"governmentNumber\": \"N325EW\",\r\n    \"manufacturer\": \"OpelConcern\",\r\n    \"brand\": \"Opel\",\r\n    \"yearOfIssue\": \"2017-04-11\",\r\n    \"details\": []\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/cars/:carId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						":carId"
					],
					"variable": [
						{
							"key": "carId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "set car1 owner2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars/:ownerId/:carId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						":ownerId",
						":carId"
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "2"
						},
						{
							"key": "carId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get owner2 by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get Owner2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql('Owner2');\r",
							"    pm.expect(jsonData.passport).to.eql('second');\r",
							"    pm.expect(jsonData.driversLicense).to.eql('B');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/owners/:ownerId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners",
						":ownerId"
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get car1 by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get car1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.vin).to.eql('first вин');\r",
							"    pm.expect(jsonData.governmentNumber).to.eql('N325EW');\r",
							"    pm.expect(jsonData.brand).to.eql('Opel');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars/:carId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						":carId"
					],
					"variable": [
						{
							"key": "carId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "change owner2 car1 on owner1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test create Owner1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql('Owner1');\r",
							"    pm.expect(jsonData.passport).to.eql('first');\r",
							"    pm.expect(jsonData.driversLicense).to.eql('D');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Owner1\",\r\n    \"middleName\": \"One\",\r\n\"lastName\": \"Owner1\",\r\n    \"passport\": \"first\",\r\n    \"driversLicense\": \"D\",\r\n    \"dateOfBirth\": \"05.12.1980\",\r\n    \"experience\": \"10\",\r\n    \"car\" : \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/owners/:ownerId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners",
						":ownerId"
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get car1 by id with new owner",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get car1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.vin).to.eql('first вин');\r",
							"    pm.expect(jsonData.governmentNumber).to.eql('N325EW');\r",
							"    pm.expect(jsonData.brand).to.eql('Opel');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars/:carId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						":carId"
					],
					"variable": [
						{
							"key": "carId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get all car with pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars?from=0&size=5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get all owners with pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/owners?from=0&size=5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get all details with pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/details?from=0&size=5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"details"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "search owners by name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get Owner1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].firstName).to.eql('Owner1');\r",
							"    pm.expect(jsonData[0].passport).to.eql('first');\r",
							"    pm.expect(jsonData[0].driversLicense).to.eql('D');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/owners/search?from=0&size=10&text=Owner1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners",
						"search"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "text",
							"value": "Owner1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "search details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"pm.test(\"Test get detail1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].serialNumber).to.eql('новое Лобовое');\r",
							"    pm.expect(jsonData[0].denomination).to.eql('Лобовое');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/details/search?from=0&size=5&text=ово",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"details",
						"search"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "5"
						},
						{
							"key": "text",
							"value": "ово"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "search cars with sort by years",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars/search?from=0&size=5&start=2015-10-05&end=2020-12-03",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						"search"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "5"
						},
						{
							"key": "start",
							"value": "2015-10-05"
						},
						{
							"key": "end",
							"value": "2020-12-03"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/:ownerId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						":ownerId"
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add account red dollars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/replenishmentAccount/:ownerId?text=RED&sum=1000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						"replenishmentAccount",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "RED"
						},
						{
							"key": "sum",
							"value": "1000"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get account red dollar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/:ownerId?text=RED",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "RED"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add account green dollars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/replenishmentAccount/:ownerId?text=GREEN&sum=1000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						"replenishmentAccount",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "GREEN"
						},
						{
							"key": "sum",
							"value": "1000"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get account green dollar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/:ownerId?text=GREEN",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "GREEN"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add account blue dollars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/replenishmentAccount/:ownerId?text=BLUE&sum=1000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						"replenishmentAccount",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "BLUE"
						},
						{
							"key": "sum",
							"value": "1000"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get account blue dollars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/:ownerId?text=BLUE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "BLUE"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "patch account withdrawal Facilities red",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/withdrawalFacilities/:ownerId?text=RED&sum=10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						"withdrawalFacilities",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "RED"
						},
						{
							"key": "sum",
							"value": "10"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get account blue dollars Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/:ownerId?text=BLUE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "BLUE"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get account red dollar Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/:ownerId?text=RED",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "RED"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get account green dollar Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/:ownerId?text=GREEN",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "GREEN"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete owner2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/owners/:ownerId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners",
						":ownerId"
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get owner2 by id Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/owners/:ownerId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners",
						":ownerId"
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get all owners with pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/owners?from=0&size=5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete car3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars/:carId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						":carId"
					],
					"variable": [
						{
							"key": "carId",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get all car with pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars?from=0&size=5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete account1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/:accountId/:ownerId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						":accountId",
						":ownerId"
					],
					"variable": [
						{
							"key": "accountId",
							"value": "1"
						},
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get account blue dollars Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/accounts/:ownerId?text=BLUE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"accounts",
						":ownerId"
					],
					"query": [
						{
							"key": "text",
							"value": "BLUE"
						}
					],
					"variable": [
						{
							"key": "ownerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete detail2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/details/:detailId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"details",
						":detailId"
					],
					"variable": [
						{
							"key": "detailId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get detail2 by id Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/details/:detailId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"details",
						":detailId"
					],
					"variable": [
						{
							"key": "detailId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "owner excep empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n    \"middleName\": \"Dous\",\r\n\"lastName\": \"Owner\",\r\n    \"passport\": \"rqagma.com\",\r\n    \"driversLicense\": \"D\",\r\n    \"dateOfBirth\": \"03.07.1996\",\r\n    \"experience\": \"20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/owners",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners"
					]
				}
			},
			"response": []
		},
		{
			"name": "owner excep path variables",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n    \"middleName\": \"Dous\",\r\n\"lastName\": \"Owner\",\r\n    \"passport\": \"rqagma.com\",\r\n    \"driversLicense\": \"D\",\r\n    \"dateOfBirth\": \"03.07.1996\",\r\n    \"experience\": \"20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/owners/:ownerId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners",
						":ownerId"
					],
					"variable": [
						{
							"key": "ownerId",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "owner excep path query params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 405 и данные в формате json\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n    \"middleName\": \"Dous\",\r\n\"lastName\": \"Owner\",\r\n    \"passport\": \"rqagma.com\",\r\n    \"driversLicense\": \"D\",\r\n    \"dateOfBirth\": \"03.07.1996\",\r\n    \"experience\": \"20\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/owners/search",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"owners",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "car excep notblank",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"vin\": \"\",\r\n    \"governmentNumber\": \"R523C\",\r\n\"manufacturer\": \"OpelConcern\",\r\n    \"brand\": \"Opel\",\r\n    \"yearOfIssue\": \"2026-04-11\",\r\n    \"details\": [],\r\n    \"owner\": \"1\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "car excep Query Params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 405 и данные в формате json\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"vin\": \"\",\r\n    \"governmentNumber\": \"R523C\",\r\n\"manufacturer\": \"OpelConcern\",\r\n    \"brand\": \"Opel\",\r\n    \"yearOfIssue\": \"2026-04-11\",\r\n    \"details\": [],\r\n    \"owner\": \"1\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/cars/search",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "detail excep notblank",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"serialNumber\": \"\",\r\n    \"denomination\": \"kancxvx\",\r\n    \"car\": \"2\"\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/details",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"details"
					]
				}
			},
			"response": []
		},
		{
			"name": "detail excep  path variables",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"serialNumber\": \"\",\r\n    \"denomination\": \"kancxvx\",\r\n    \"car\": \"2\"\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/details/:detailId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"details",
						":detailId"
					],
					"variable": [
						{
							"key": "detailId",
							"value": null
						}
					]
				}
			},
			"response": []
		}
	]
}